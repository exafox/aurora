---
- name: Install postgres repository
  yum:
    name: http://yum.postgresql.org/9.4/redhat/rhel-6-x86_64/pgdg-redhat94-9.4-1.noarch.rpm
    state: present
  when: not 'production' in group_names

- name: Ensure the temporary directory exists
  file:
    path: "{{ pp_temp_dir }}"
    recurse: yes
    state: directory

- name: Download PostgresPlus Advanced Server installer
  unarchive:
    src: "{{ pp_bin_path }}/ppasmeta-{{ pp_installer_version }}-linux-x64.tar.gz"
    dest: "{{ pp_temp_dir }}/"
    mode: 0700

- name: Create configuration file
  template:
    src: config_param.j2
    dest: "{{ pp_temp_dir }}/config_param"
    mode: 0600

- name: Run PostgresPlus install script
  shell: "{{ pp_temp_dir }}/ppasmeta-{{ pp_installer_version }}-linux-x64/ppasmeta-{{ pp_installer_version }}-linux-x64.run --optionfile {{ pp_temp_dir }}/config_param"
  args:
    chdir: "{{ pp_temp_dir }}"
    creates: "{{ pp_prefix }}"
  notify:
    - restart postgres

- name: Configure postgres connection options
  template:
    src: pg_hba.conf.j2
    dest: "{{ pp_datadir }}/pg_hba.conf"
    group: "{{ pp_superaccount }}"
    owner: "{{ pp_superaccount }}"
    mode: 0600

- name: Configure PPAS server
  template:
    src: postgresql.conf.j2
    dest: "{{ pp_datadir }}/postgresql.conf"
    group: "{{ pp_superaccount }}"
    owner: "{{ pp_superaccount }}"
    mode: 0600

- name: open up ports in iptables
  command: "iptables -I {{ iptables_chain }} 3 -p tcp -m tcp --dport {{ pp_serverport }} -j ACCEPT"
  when: iptables_config

- name: Save rules
  command: "/sbin/service iptables save"
  when: iptables_config
