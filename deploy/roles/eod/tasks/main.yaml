---
# TODO: put rpm somewhere accessible
- name: Copy over the EOD bin file
  copy:
    src: "{{ eod_local_bin_directory }}/{{ eod_binary }}"
    dest: "{{ eod_bin_directory }}/{{ eod_binary }}"
  when: custom_repo

- name: chmod eod bin
  file:
    path: "{{ eod_bin_directory }}/{{ eod_binary }}"
    mode: a+x
  when: custom_repo

- name: install expect
  yum:
    name: expect
    state: present

- name: Ensure that eod directory exists
  file:
    path: "{{ eod_install_directory }}/"
    state: directory

- name: copy the eod expect script
  template:
    src: install_eod_server.exp
    dest: /tmp/install_eod_server.exp
    mode: a+x

- name: run EOD expect script
  shell: /tmp/install_eod_server.exp
  when: custom_repo
  args:
    creates: "{{ eod_install_directory }}/bin/install"

- name: run eod silent install
  shell: "{{ eod_install_directory }}/bin/install -s"
  when: custom_repo
  args:
    creates: "{{ eod_install_directory }}/bin/otecs"

- name: configure cluster.cfg
  template:
    src: cluster.cfg
    dest: "{{ eod_install_directory }}/conf/admin/cluster.cfg"
  when: custom_repo
  notify:
    - restart eod

- name: configure xdmcp
  template:
    src: XDMCP_Query.cfg
    dest: "{{ eod_install_directory }}/conf/admin/Xconfig/XDMCP_Query.cfg"
  notify:
    - restart eod
    - restart gdm
  when: custom_repo

- name: configure eod license file
  template:
    src: akeys
    dest: "{{ eod_install_directory }}/conf/admin/akeys"
  when: custom_repo
  notify:
    - restart eod

- name: install X Window System
  yum:
    name: "@X Window System"
    state: present

- name: install Desktop
  yum:
    name: "@Desktop"
    state: present

- name: install General Purpose Desktop
  yum:
    name: "@General Purpose Desktop"
    state: present

- name: Install Firefox
  yum:
    name: firefox
    state: present

- name: configure custom.conf
  template:
    src: custom.conf
    dest: /etc/gdm/custom.conf
    mode: 0644

- name: configure inittab
  template:
    src: inittab
    dest: /etc/inittab

# TODO: ensure video driver?
- name: configure xorg.conf
  template:
    src: xorg.conf
    dest: /etc/X11/xorg.conf
  notify:
    - restart gdm
  # notify:
  #   - ensure video driver

- name: configure exceed connection server
  template:
    src: exceed-connection-server
    dest: /etc/pam.d/exceed-connection-server
    mode: 0644
  notify:
    - restart eod

#- name: configure system-auth-ac
#  template:
#    src: system-auth-ac
#    dest: /etc/pam.d/system-auth-ac
#  notify:
#    - restart eod

#- name: Update authconfig
#  command: authconfig --enablewinbind --update

#- name: validate password-auth-ac
#  shell: cat /etc/pam.d/password-auth-ac
#  register: password_result
#  notify:
#    - restart eod

#- assert:
#    that:
#      - "'krb5' in password_result.stdout"
#      - "'winbind' in password_result.stdout"

- name: configure package update proxy
  template:
    src: 20-no-show-proxy-dialog.pkla
    dest: /etc/polkit-1/localauthority/30-site.d/20-no-show-proxy-dialog.pkla
    mode: 0644
  notify:
    - restart eod

- name: open up ports in ipconfig
  command: "iptables -I {{ iptables_chain }} 3 -p tcp -m tcp --dport {{ item }} -j ACCEPT"
  with_items: eod_client_ports
  when: iptables_config

- name: save the new ipconfig
  command: "/sbin/service iptables save"
  when: iptables_config

- name: remove S99firstboot
  file:
    path: /etc/rc5.d/S99firstboot
    state: absent

- name: run gdm
  command: start prefdm
  register: gdm_status
  failed_when: gdm_status.rc != 0 and "Job is already running" not in gdm_status.stderr
  changed_when: gdm_status.rc == 0
